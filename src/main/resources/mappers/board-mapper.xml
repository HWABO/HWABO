<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">
	<resultMap type="Board" id="selectBoard">
		<id column="board_num" property="board_num" />
		<result column="board_title" property="board_title" />
		<result column="board_writer" property="board_writer" />
		<result column="board_content" property="board_content" />
		<result column="board_original_filename" property="board_original_filename" />
		<result column="board_rename_filename" property="board_rename_filename" />
		<result column="board_date" property="board_date" />
		<result column="board_level" property="board_level" />
		<result column="board_ref" property="board_ref" />
		<result column="board_reply_ref" property="board_reply_ref" />
		<result column="board_reply_seq" property="board_reply_seq" />
		<result column="board_readcount" property="board_readcount" />
	</resultMap>
	<resultMap type="Board" id="resultTop3">
		<result column="board_num" property="board_num" />
		<result column="board_title" property="board_title" />
		<result column="board_readcount" property="board_readcount" />
	</resultMap>
	<resultMap type="_int" id="c">
		<result column="c" property="c" />
	</resultMap>
	<select id="selectTop3" resultMap="resultTop3">
		<![CDATA[
		select * from (select rownum rnum, board_num, board_title, board_readcount 
		from (select * from board where board_level = 0 order by board_readcount desc)) 
		where rnum >= 1 and rnum <= 3
		]]>
	</select>
	<select id="selectList" parameterType="com.kh.second.board.model.vo.BoardPage" resultMap="selectBoard">
		<![CDATA[
		select * 
		from (select rownum rnum, board_num, board_title, board_writer, board_content, board_original_filename, board_rename_filename, board_date, board_level, board_ref, board_reply_ref, board_reply_seq, board_readcount from 
			(select * from board order by board_ref desc, board_reply_ref desc, board_level asc, board_reply_seq asc)) 
		where rnum >= #{ currentPage } and rnum <= #{ limit }
		]]>
	</select>
	<select id="selectBoard" parameterType="Board" resultMap="selectBoard">
		select * from board where board_num= #{ board_num }
	</select>
	<select id="getListCount" resultMap="c">
		select count(*) c from board
	</select>
	
	<delete id="deleteBoard" parameterType="com.kh.second.board.model.vo.BoardPage"><!-- scope변수명의 delete대상과 무관함 -->
		delete from board
		<if test="limit == 0">
		where board_ref = #{ currentPage }
		</if>
		<if test="limit == 1">
		where board_reply_ref = #{ currentPage }
		</if>
		<if test="limit == 2">
		where board_num = #{ currentPage }
		</if>
	</delete>
	
	<insert id="insertOriginBoard" parameterType="Board">
		insert into board values (
		(select max(board_num) + 1 from board),
		#{ board_title },#{ board_writer },#{ board_content }
		<if test="boardOriginalFileName != null">
		,#{ board_original_filename },#{ board_rename_filename }
		</if>
		<if test="boardOriginalFileName == null">
		,null,null
		</if>
		,sysdate, 0,(select max(board_num) + 1 from board), default, default, default)
	</insert>
	<insert id="insertReply" parameterType="Board">
		<if test="boardLevel == 1">
		insert into board values (
		(select max(board_num) + 1 from board),#{ board_title },#{ board_writer },#{ board_content },null,null,sysdate, 1, #{ board_ref }, 
		(select max(board_num) + 1 from board), #{ board_reply_seq }, default)
		</if>
		<if test="boardLevel == 2">
		insert into board values (
		(select max(board_num) + 1 from board),#{ board_title },#{ board_writer },#{ board_content },null,null,sysdate, 2, #{ board_ref }, #{ board_reply_ref }, #{ board_reply_seq }, default)
		</if>
	</insert>
	
	<update id="updateOrigin" parameterType="Board">
		update board set board_title =#{ boardTitle }, board_content = #{ board_content }, 
		board_original_filename = 
		<if test="boardOriginalFileName != null">
		#{ board_original_filename }, board_rename_filename =#{ board_rename_filename } 
		</if>
		<if test="boardOriginalFileName == null">
		null, board_rename_filename = null 
		</if>
		where board_num = #{ board_num }
	</update>
	<update id="updateReply" parameterType="Board">
		update board set board_title = #{ board_title }, board_content = #{ board_content } where board_num = #{ board_num }
	</update>
	<update id="updateReplySeq" parameterType="Board">
		<if test="boardLevel == 1">
		update board set board_reply_seq = (board_reply_seq + 1) where board_ref= #{ board_ref } and board_reply_ref = #{ board_level }
		</if>
		<if test="boardLevel == 2">
		update board set board_reply_seq = (board_reply_seq + 1) where board_ref= #{ board_ref } and board_level = #{ board_level } and board_reply_ref = #{ board_reply_ref }
		</if>
	</update>
	<update id="addReadCount" parameterType="_int">
		update board set board_readcount = board_readcount + 1 where board_num = #{ board_num }
	</update>

</mapper>
