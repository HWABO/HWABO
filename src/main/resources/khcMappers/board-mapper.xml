<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">

	<resultMap type="Board" id="resultBoard">
		<id column="board_num" property="board_num" />
		<result column="board_title" property="board_title" />
		<result column="board_writer" property="board_writer" />
		<result column="board_content" property="board_content" />
		<result column="board_original_filename"	property="board_original_filename" />
		<result column="board_rename_filename"	property="board_rename_filename" />
		<result column="board_date" property="board_date" />
		<result column="board_level" property="board_level" />
		<result column="board_ref" property="board_ref" />
		<result column="board_reply_ref" property="board_reply_ref" />
		<result column="board_reply_seq" property="board_reply_seq" />
		<result column="board_readcount" property="board_readcount" />
	</resultMap>

	<resultMap type="Board" id="resultTop3">
		<result column="board_num" property="board_num" />
		<result column="board_title" property="board_title" />
		<result column="board_readcount" property="board_readcount" />
	</resultMap>

	<resultMap type="_int" id="c">
		<result column="c" property="c" />
	</resultMap>

	<select id="selectTop3" resultMap="resultTop3">
		select *
		from (select rownum rnum, board_num, board_title, board_readcount
		from (select *
		from board
		where board_level = 0 order by board_readcount desc)) 
		<![CDATA[	        
		where rnum >=1 and rnum <=3
		]]>
	</select>

	<select id="getListCount" resultType="_int">
		select count(*) from board
	</select>

	<select id="selectList" parameterType="com.kh.second.board.model.vo.BoardPage"
		resultMap="resultBoard">
		select *
		from (select rownum rnum, board_num, board_title, board_writer,
		board_content, board_original_filename,
		board_rename_filename, board_date, board_level, board_ref, board_reply_ref, board_reply_seq,
		board_readcount
		from (select *
		from board
		order by board_ref desc, board_reply_ref desc, board_level asc,
		board_reply_seq asc))
		<![CDATA[ 
		where rnum >= #{ startRow } and rnum <= #{ endRow }
		]]>
	</select>

	<select id="selectBoard" parameterType="_int"
		resultMap="resultBoard">
		select * from board where board_num = #{ board_num }
	</select>


	<insert id="insertOriginBoard" parameterType="Board">
		insert into board
		<if test="board_original_filename != null">
			values ( (select max(board_num)+1 from board), #{ board_title }, #{
			board_writer }, #{ board_content },
			#{ board_original_filename }, #{ board_rename_filename },
			sysdate, 0, (select max(board_num)+1 from board), default, default, default )
		</if>
		<if test="board_original_filename == null">
			values ( (select max(board_num)+1 from board), #{ board_title }, #{
			board_writer }, #{ board_content },
			null, null,
			sysdate, 0, (select max(board_num)+1 from board), default, default, default )
		</if>
	</insert>

	<insert id="insertReply1" parameterType="Board">
		insert into board
		values ( (select max(board_num)+1 from board), #{ board_title }, #{
		board_writer }, #{ board_content },
		null, null, sysdate,
		1, #{ board_ref }, (select max(board_num)+1 from board), #{
		board_reply_seq }, default )
	</insert>

	<insert id="insertReply2" parameterType="Board">
		insert into board
		values ( (select max(board_num)+1 from board), #{ board_title }, #{
		board_writer }, #{ board_content },
		null, null, sysdate,
		2, #{ board_ref }, #{ board_reply_ref }, #{ board_reply_seq }, default )
	</insert>


	<update id="addReadCount" parameterType="_int">
		update board
		set board_readcount = (board_readcount+1)
		where board_num = #{ board_num }
	</update>

	<update id="updateReplySeq1" parameterType="Board">
		update board
		set board_reply_seq = (board_reply_seq + 1)
		where board_ref= #{ board_ref }
		and board_level = #{ board_level }
	</update>

	<update id="updateReplySeq2" parameterType="Board">
		update board
		set board_reply_seq = (board_reply_seq + 1)
		where board_ref = #{ board_ref }
		and board_level = #{ board_level }
		and board_reply_ref = #{ board_reply_ref }
	</update>


	<update id="updateReply" parameterType="Board">
		update board
		set board_title = #{ board_title }, board_content = #{ board_content }
		where board_num = #{ board_num }
	</update>

	<update id="updateOrigin" parameterType="Board">
		update board
		set board_title = #{ board_title }, board_content = #{ board_content }
		<if test="board_original_filename != null">
			, board_original_filename = #{ board_original_filename }
			, board_rename_filename = #{ board_rename_filename }
		</if>
		<if test="board_original_filename == null">
			, board_original_filename = null
			, board_rename_filename =
			null
		</if>
		where board_num = #{ board_num }
	</update>


	<delete id="deleteBoard" parameterType="Board">
		delete from board
		<if test="board_level == 0">
			where board_ref = #{ board_num }
		</if>
		<if test="board_level == 1">
			where board_reply_ref = #{ board_num }
		</if>
		<if test="board_level == 2">
			where board_num = #{ board_num }
		</if>
	</delete>
</mapper>
