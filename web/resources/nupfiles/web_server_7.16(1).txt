자바만 개발하는 이클립스 (java developer)

자바 ee? 모듈이 설치가 되어있어야 웹개발 가능. (Enterprise java developer)

지금 설치된 것은 스탠다드모드?

시험 볼 때
오라클 XE깔려있는지. 자바는 EE인지 확인

팀원들의 이클립스

한글은 가종으로 windows가 지원하는 언어로 되어있다.

workspace의 언어설정을 전부 UTF-8 로 바꾸어주면 한글 깨지지 않는다. 


여기서부터 workspace 바꿀 때마다 새로 설정해줘야한다.



워크스페이스 설정
윈도우 preferences > general > workspace > text file encoding > other > UTF-8

아래까지하면 자바 클래스는 설정 끝
editors > text editors > spelling > emcoding > default (UTF-8)

브라우저의 문자 셋팅
JSON > JSON Files > EUC-KR 는 국제 표준 > ISO 10646/unicode(UTF-8)

  Wed    > CSS file > ISO 10646/unicode(UTF-8)
	> HTML file > ISO 10646/unicode(UTF-8)
	> JSP file  >ISO 10646/unicode(UTF-8)

XML은 기본 UTF-8 손댈 필요 없음


톰캣 ? 다운로드시 주의사항 자바와 버젼 맞춰야한다. JDK가 8.5면 톰캣도 8.5
https://tomcat.apache.org/
웹어플리케이션 서버라서 설치시 위험해서 미리 설치한 파일을 압축한 형태로 제공
	8.5.57
	64-bit Windows zip (pgp, sha512)

이클립스에서 왓스 뭐를 쓸 건지 등록해야함

이클립스에서 왓스(톰캣) 구동해서 ?
<서버 설정>
왓스 등록
윈도우 preferences > server > runtime enviroment
톰캣(서버)하나당 프로젝트 하나 (자동차는 엔진 1개면 된다.)
톰캣이 포트번호를 설정해준다. 하나의 톰캣 여러번 사용가능하지만 포트번호를 다르게 해준다
어플리케이션마다 서버 추가해줘야함

add > 다운받은 8.5   > 폴더 위치 > apply

data source explorer
이클립스 안에서 sql developer 역할이지만 번거로우니까 우선 사용 X


servers > 빈공간 우클릭 > new > 맨 밑 > server runtime enviroment 보면 아까 등록한 톰캣보임

server name 은 Servers창에 보일 이름 설정해주는 것. 아래서 2번째  > web test1

서버 실행시키면 맨 처음은 방화벽 허용 > 에러:이미 사용중인 포트번호 
> 오라클 설치하면서 오라클 웹서비스가 자동으로 깔림. > 이게 8080 포트 번호로 설정되어있음.

포트번호 바꾸기 
톰캣의 설정파일 열기 > 서버이름 더블클릭 
설정파일은 xml파일
overview 탭에서 Ports > 기본으로 HTTP 프로토콜이다 
> Port number 8888로 바꾸면서 톰캣은 8555로 바꾼다

아래로 내리면 server option 있고 
맨 처음  serve modules withput publishing 반드시 체크해야함. ☆
이거 체크 안하면 내가 만든 것 파일 저장 원하는 위치에 할 수 없음. 파일 찾기 어려움

저장후 서버 start 해보면 콘솔창 맨밑에 
   정보: Server startup in 233 ms 
나오면 서버 구동 완료 > 확인 후 stop

워크스페이스 안에서 작업하면 자동으로 그 안에서 이루어지는 모든 작업은 알아서 저장된다.
servers 파일 자동으로 생성
서버 지울거면 Servers창에서도 지우고 워크스페이스 안에 폴더도 같이 지워야한다.

에러 바로 보여지는 창 만들기 > window > show view > other > general > problems

file > new > dynamic web project > 프로젝트 이름은 자유, next까지 전부 하고 finish할 것
> target runtime = test web1  > 서블릿 버전 3.1 > next > 나중에 손봐야함 
> next > web.xml이 총괄파일(스프링프레임 워크에서는 사용해야만 한다. 버전에 따라 체크 안해도 되지만 우리는 사용한다. 중요한 파일이다.)
> content directory : 우리가 사용할 각종 이미지등 과같은 모든 자원을 저장하는 파일. 이름 web으로 한다.
> context directory : 사용자에게 보여질 때는 진짜 프로젝트 이름 가리고(mapping) 보여준다. 해킹 위험성때문에 . 그래서  url에 보여질 이름 바꿔준다 
		   가짜이름 만들기 = test1 로 입력해주었다.
> finish

이 어플리케이션에 사용할 왓스모듈을 정하는 것 : target runtime
자바 ee에 대한 연결모듈? 톰캣이 가지고 있어서 톰캣이 연결 안되어 있으면 자바 ee사용 X


서버 어플릿? = 서블릿 클래스 > 자바 ee 가 제공( 3.1버젼임, 버젼 확인만 할 것.)


java resources > src > 이 안에 자바 작업하면 된다. > 여기서 작업한 것 저장하면 build에 저장됨
> 그러나 web 파일 밑에 모든 자원 들어가 있어야한다. 안그러면 error : 404 (클래스 없음)
그래서 경로 수정 해주어야함 
프로젝트 이름 우클릭 > proferties > java build path > 탭에서 source > default output folder > Browse... 
> web 밑에 > WEB-INF > create new folder > 폴더 이름 classes > ok

    webProject1/web/WEB-INF/classes 이렇게 되어있어야 한다. 모든 자원은 content 디렉토리 밑에 있어야하기 때문에

라이브러리에서 jar 연결 해주고 applyandclose 하고 build 파일 안쓰니까 삭제. 안쓰는 파일 굳이 가지고 있을 필요가 없다.
네비게이터 가서보면 classes 파일 만들어진것 확인 가능

웹 프로젝트의 MVC 구조 잡기 시작!
< web이 root > 
web 우클릭 > new folder > 파일이름: views



웹은 거의 board 이다.
board 공지사항, Q&A, 자료실 등등 > 페이징 처리  :  기본 crud 

views 밑에 페이지별로 폴더 나눠주는것이 좋다 > new folder > board, member, notice 폴더 3개 만들어줌

html은 구조만 잡는 것이다. (쌩얼)
CSS : 이쁘게 꾸며주는 것 (화장)
        반응형 웹 ? = 디바이스별로 다르게 보이는 것.
        우선 프로젝트진행하면서 이쁘게 할 때는 다른 곳에서 페이지 소스보고 긁어 오기 하세요 
        부트 스트랩 사용 > 어렵 > 뷰에 신경 쓸 때가 아니다.


view와 관련된 폴더 만든 것
web 밑에 new folder > 파일이름 : resources
resources > new folder > 파일이름 : css, images, js, sounds, videos

src > new package 
	여기 숏컷메뉴 수정 : window > prespective > customize ~ > shortcuts 탭 > java, web, XML는 통으로 체크 > javascript는 소스파일만 체크

MVC 구조 만들기 
src > new package > member.controller > member.model.vo/dao/service 
src > new package > notice.controller > notice.model.vo/dao/service 
src > new package > board.controller > board.model.vo/dao/service 
src > new package > common > new class > JDBCTemp.java
             (프로펄티스 이용할 것임)

요새는 프로퍼티스보다 XML사용한다. 우리는 프로퍼티스 할 것임. 프로퍼티스는 XML도 읽음

common > new file > jdbc.properties 
		       > 이 안에 driver, url, user, passwd 써주고 마지막에 한줄 엔터 하고 저장.

web > WEB-INF > classes > common > 프로퍼티스 생겨있는 것 확인가능

프로퍼티스는 생성하고나서 사용해야하는 얘다



웹서비스는 로그인처리

회원가입을 해야 로그인가능


이 기본 구조를 만들어서 팀원 공유, DB스크립트도 같이, driver jar도

프로젝트이름 우클릭 > new folder > dbscript > 여기에 자바프로젝트 3꺼 복사해옴



web.xml 열기 > source 탭 > 디스플레이 네임 = 프로젝트명 
	첫번째로 구동될 페이지(첫 화면) = welcome-file > html, jsp
	html은 자바소스코드를 추가(표현)할 수 없어서 JSP(html+ java소스코드)로 진행
 <welcome-file>index.jsp</welcome-file> 
이거 빼고 전부 지워버리기!

welcome 파일은 반드시 ! content directory(web)안에 만들어야한다

web 우클릭 > new JSP file > index.jsp : WEB-INF 아래에 자동으로 생성
(index.jsp)
이건 java
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

이건 html
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

</body>
</html>

------------>>>> 이거 2개 섞인 것이 jsp


웹어플리케이션은 브라우저를 통해서 보여지게 되어있음. 
브라우저를 통해 보여질 수 있는 파일 형식은 html이다.
중간중간에 자바소스코드를 섞어서 쓰고 싶으면 JSP를 사용하면 된다.

html : html 태그들(<   >)로 구성된 마크업언어
이 태그들은 시작과 끝이 있어야한다.
꺽쇠괄호 안에 단어만 쓴 것이 시작
꺽쇠괄호 안에 /단어 쓴 것이 끝

태그 안에 쓸 수 있는 태그가 정해져있다.
브라우저 안에 보여질 애들은 전부 body안에 적어줘야한다.
head는 안보이니까 주로 설정관련된 내용 적어준다.

시작 태그명 뒤에는 속성을 정의할 수 있다.
태그마다 쓸 수 있는 속성이 정해져 있고 그 속성에 적용할 수 있는 값이 있다.


단일태그 : 몇개 없음. meta가 태그 영역에서 사용하는 단일 태그
<meta>는 닫기가 없다.
<meta charset="UTF-8"> 문자셋팅을 UTF-8로 한다는 의미
	아까 설정해놔서 자동으로 써진 것이다.

이 페이지의 제목(tap에 보이는 단어?) : <title> </title>

이 index.jsp를 톰캣에 넣어줘야한다. 그래야 톰캣이 이거 실행해줌


server이름 우클릭 > add and remove > 왼쪽에 있는 프로젝트이름선택하고 add 눌러주면 오른쪽으로 이동
> 오른쪽이 톰캣이 구동할 어플리케이션을 넣어두는 것이다. (오른쪽에는 하나만 넣어줘야한다.)
> server이름 더블클릭해보면 프로젝트가 등록된 것 확인 할 수 있다.

server(톰캣)를 start 한다. 

브라우저의 주소창에 입력 : http://127.0.0.1:8888/test1 (localhost:포트번호:가짜이름)

톰캣만 구동시켜놓으면 누구나 요청하는 사람들은 들어올수 있다. 위의 주소를 도메인(유료)으로 가릴수 있다.



HTML&CSS

하이퍼 텍스트 ? 
 글자와 함께 이미지나 소리, 동영상 등등의 멀티미디어가 포함된 문서
 고로 웹도 하이퍼텍스트이다.

마크업 = 표시용
아스키코드로 구성
브라우저통해서 보여지는 거라서 웹브라우저만 있으면 어떤 os인지는 상관없다.
태그안의 내용은 공백이나 줄바꿈을 인식하지 않고,태그는 대문자나 소문자 아무걸로나 써도 된다.
 
공백은 한칸만 인정. 줄바꿈은 인정안됨.
줄바꿈 하고싶으면 줄바꿈하는 태그쓰면 된다.
-----> <br> : 엔터키의 위치에 써넣으면 된다. 브레이크의 줄임말이다
-----> 공백 한칸 이상 : &nbsp; 이대로 써넣으면 된다. 

HTML은 모든 것을 태그로 표현한다.


단일태그  : img, meta, br 
복합(폐쇄형) 태그 : head, body

네트워크의 일종인 인터넷 
: 왜 인터넷이 되었나 ? 군사기밀 전달할 때 네트워크로 전달하면 어떨까 ? 라는 생각으로 시작
 슈퍼컴퓨터끼리 물리적인 선으로 연결해서 했다가 너무 많아진 선. 필요없는 선도 많았음.
 이것 정리좀 하자 ! 국방선에서 필요없다고하는 것은 상업화 용도로 쓰자 ! 이게 인터넷.
 
사용자가 www이용해서 요청 > 웹서버가 요청받음 > 사용자한테 응답   

웹은 서블릿이라는 클래스?


엘리먼트는 그 안의 태그들까지 의미한다.
태그는 <>형태로 생긴 꼬리표?
시작태그명 한칸띄고 속성작성할 수 있다.
변수 : 값은 ""로 묶어야한다.
<태그명 속성명="값"> 

head
	안에 title
body
	실제 브라우저안에 보여지는 내용. 여기 안에 있는 내용만 보여진다.


https://www.editplus.com/kr/download.html 

에디트플러스 5.3 평가판
● EditPlus 5.3 다운로드 (64-bit, 2.48 MB)
한번 설치하면 지울 수가 없다. 재설치 불가능. 계속 써야한다.
실행 후 평가판 > 30일 사용가능
: 30일 지나면 ㅋㅋ평가판 누르지말고 그냥 옆으로 치워두고 사용 ㅋㅋㅋㅋ

클립텍스트 클릭 > 아래 내용은 아스키코드이다. > ANSI charaters 옆에 화살표 > HTML 5 
> 태그 리스트 나옴 
태그가 들어갈 위치에 마우스 놓고 옆에 태그 더블클릭하면 써진다.

파일 > 새파일 > HTML페이지
h1은 제일 큰 글씨
지구본모양 누르면 결과가 브라우저에서 어떻게 보이는지 알 수 있다. 


CSS2, CSS3 은 디자인 관련. 색이나 모양 ? 

이미지라는 버튼 눌러서 그림 추가 

사용법, 처리 결과, 결과미리보기 전부 있음 아래 홈페이지에서 공부가능
	https://www.w3schools.com/


에디터플러스는 확인용으로 쓸 것임.
여기에 pdf에 있는 것 써보면서 확인

해상도 (1280*780)이면 가로로 1280줄, 세로로 780줄로 나누고 그 한 칸의 네모를 픽셀이라고 한다.
HTML은 기본 단위가 픽셀.  ( 해상도가 높을수록 픽셀은 작아진다.(=바탕화면 아이콘 작아보임) 
			픽셀은 색상 1개의 값만 저장가능. )
그럼 1픽셀이 최소 !

수평선 그을 때
<HR SIZE=n WIDTH=n(%) CORLOR="#색상 코드" NOSHADE ALIGN="LEFT ; RIGHT ; CENTER">
여기서 사이즈는 굵기.  width는 화면의 몇퍼센트 채울때. 노쉐이드는 그림자 없애기. align은 정렬위치



왼쪽의 디렉토리 > d > 작업중인 워크스페이스 > 여기서 작성하면 자동으로 이클ㄹ비스에서도 적용된다.


css는 헤드태그 안에 사용
<!--
--> 이 사이의 내용은 주석처리됨 


div는 영역잡아주는 것임.
id랑 class는 모든 태그에서 사용 가능. 
id는 유일한 값, class는 이름 중복 가능.
같은 이름의 class로 묶을 수 있다.
헤드의 스타일 태그안에서의 주석은 /**/
	헤드의 스타일에서 div#아이디 {} 
	: 이렇게 쓰면 저 아이디를 가진 div만 적용 저거 생략하면 모든 div에 적용 
	  공백없이 아이디 써야한다. 공백은 CSS에서 ' ~안에의' 의미를 가지기 때문이다.

	div.클래스명
	: 이렇게 쓰면 같은 이름을 가진 클래스들을 묶어서 지정가능

이미지는 url써줘야하는데 상대경로 또는 절대경로로 입력해주어야한다.
index-jsp가 기준/// '' 도 되고 ""도 된다.
상대경로 : 'resources/images/d7.jpg'

목록작업
1. ol 태그 : 숫자로 목록

2. ul 태그 : 기호로 목록

3. 단어 내용 이런식으로 목록














